include:
 - 'https://source.puri.sm/Librem5/librem5-ci/raw/master/librem5-pipeline-definitions.yml'

stages:
 - build
 - test+docs
 - package
 - deploy

default:
  # Protect CI infra from rogue jobs
  timeout: 15 minutes
  # Allow jobs to be caneled on new commits
  interruptible: true
  # Retry on infra hickups automatically
  retry:
    max: 1
    when:
      - 'api_failure'
      - 'runner_system_failure'
      - 'scheduler_failure'
      - 'stuck_or_timeout_failure'

variables:
  DEPS: git gcovr
  ALPINE_EDGE_DEPS: |
        git meson ninja gnome-desktop-dev gobject-introspection-dev
        libinput-dev wayland-dev wayland-protocols libxkbcommon-dev
        xwayland-dev json-glib-dev
  ALPINE_EDGE_WLROOTS_DEPS: |
        eudev-dev ffmpeg-dev glslang libdisplay-info-dev
        libliftoff-dev mesa-dev pixman-dev vulkan-headers vulkan-loader-dev
        wayland-dev wayland-protocols xcb-util-image-dev xcb-util-renderutil-dev
        xcb-util-wm-dev libseat-dev hwdata-dev
  XVFB_RUN: xvfb-run -s -noreset
  DEBIAN_IMAGE: $CI_REGISTRY/world/phosh/phoc/debian:v0.0.2023-11-05.3

.build: &build
  script:
    - export LC_ALL=C.UTF-8
    - meson setup _build $BUILD_ARGS
    - meson compile -C _build
    - meson install -C _build

.before_script_debian: &before_script_debian
  - rm -f ../* || true
  - echo "deb http://deb.debian.org/debian/ sid main" > /etc/apt/sources.list.d/sid.list
  - eatmydata apt-get -y update
  - eatmydata apt-get -y install libwayland-dev wayland-protocols
  - DEB_BUILD_PROFILES=pkg.phoc.embedwlroots eatmydata apt-get -y build-dep .
  - eatmydata apt-get -y install $DEPS
  # Don't accidentally pull in system headers
  - eatmydata apt-get -y remove --purge libwlroots-dev
  - dpkg -l

.before_script_alpine: &before_script_alpine
  - apk -q add alpine-sdk
  - apk -q add $ALPINE_EDGE_DEPS $ALPINE_EDGE_WLROOTS_DEPS

build-with-xwayland-debian-trixie:
  stage: build
  image: ${DEBIAN_IMAGE}
  before_script: *before_script_debian
  variables:
     BUILD_ARGS: -Dembed-wlroots=enabled -Dxwayland=enabled -Db_coverage=true
  <<: *build
  artifacts:
    paths:
      - _build
  except:
    variables:
      - $PKG_ONLY == "1"

build-with-xwayland-alpinelinux-edge:
  stage: build
  image: alpine:edge
  before_script: *before_script_alpine
  variables:
     BUILD_ARGS: -Dembed-wlroots=enabled -Dxwayland=enabled
  <<: *build
  allow_failure: true
  except:
    variables:
      - $PKG_ONLY == "1"

build-without-xwayland-alpinelinux-edge:
  stage: build
  image: alpine:edge
  before_script: *before_script_alpine
  variables:
     BUILD_ARGS: -Dembed-wlroots=enabled -Dxwayland=disabled
  <<: *build
  allow_failure: true
  except:
    variables:
      - $PKG_ONLY == "1"


unit-test-with-xwayland-debian-trixie:
  stage: test+docs
  image: ${DEBIAN_IMAGE}
  needs:
    - build-with-xwayland-debian-trixie
  before_script: *before_script_debian
  script:
    - WLR_RENDERER=pixman ${XVFB_RUN} meson test --print-errorlogs -C _build
    - ninja -C _build coverage
  coverage: '/^lines:\s+([\d.]+\%)\s+/'
  artifacts:
    when: always
    reports:
      junit:
        - _build/meson-logs/testlog.junit.xml
    paths:
      - _build
  except:
    variables:
      - $PKG_ONLY == "1"

asan-test-native-debian-trixie:
  stage: test+docs
  image: ${DEBIAN_IMAGE}
  tags: [ asan ]
  needs: []
  before_script: *before_script_debian
  script:
    - meson setup -Db_sanitize=address _build-asan
    - ninja -C _build-asan data/gschemas.compiled
    - WLR_RENDERER=pixman ${XVFB_RUN} meson test --verbose -C _build-asan
  except:
    variables:
      - $PKG_ONLY == "1"
  allow_failure: true

build-gtkdoc:
  stage: test+docs
  image: ${DEBIAN_IMAGE}
  before_script: *before_script_debian
  variables:
    BUILD_ARGS: -Dgtk_doc=true -Dembed-wlroots=disabled
  script:
    - git clean -dfx
    - 'echo "Build opts: ${BUILD_ARGS}"'
    - meson . _build $BUILD_ARGS
    - helpers/doc-check _build
    - test -f _build/doc/phoc-*/index.html
    - mv _build/doc/phoc-*/ _reference/
  artifacts:
    paths:
      - _reference
  except:
    variables:
      - $PKG_ONLY == "1"

package-debian-trixie:arm64:
  variables:
    L5_DOCKER_IMAGE: debian:trixie
    DEB_BUILD_PROFILES: 'pkg.phoc.embedwlroots'
  tags:
    - aarch64
  extends: .l5-build-debian-package

package-debian-trixie:sanitizers:arm64:
  variables:
    L5_DOCKER_IMAGE: debian:trixie
    DEB_BUILD_PROFILES: 'pkg.phoc.embedwlroots pkg.phoc.sanitizers'
  tags:
    - aarch64
  when: manual
  extends: .l5-build-debian-package

pages:
  stage: deploy
  needs:
    - build-gtkdoc
  script:
    - mv _reference/ public/
  artifacts:
    paths:
      - public
  only:
    - main
